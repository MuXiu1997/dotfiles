#!/usr/bin/env python
import os
import subprocess


def get_outdated(_type, color):
    env = os.environ
    env['HOMEBREW_NO_AUTO_UPDATE'] = 'true'
    cmd = subprocess.Popen(
        ['brew', 'outdated', '-v', '--{}'.format(_type), ],
        stdout=subprocess.PIPE,
        env=env
    )
    stdout, _ = cmd.communicate()
    output = stdout.strip().decode()

    def format_line(line):
        name, other = line.split(' ', maxsplit=1)
        return '\033[0;{}m{}\033[0m {}'.format(color, name, other)

    return list(map(format_line, output.splitlines()))


if __name__ == '__main__':
    brew_update_cmd = subprocess.Popen(
        ['brew', 'update'],
        stdout=subprocess.PIPE,
    )
    brew_update_cmd_stdout, _ = brew_update_cmd.communicate()
    print(brew_update_cmd_stdout.decode())

    outdated = [*get_outdated('cask', 33), *get_outdated('formula', 34)]

    fzf_cmd = subprocess.Popen(
        ['fzf', '--ansi', '-m'],
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE
    )
    fzf_cmd_stdout, _ = fzf_cmd.communicate('\n'.join(outdated).encode())
    if fzf_cmd.returncode != 0:
        exit(fzf_cmd.returncode)

    selected = [l.split(' ')[0] for l in fzf_cmd_stdout.decode().splitlines()]

    print('brew upgrade --no-quarantine -- {}'.format(' '.join(selected)))
    os.execvp('brew', ['brew', 'upgrade', '--no-quarantine', '--', *selected])
