let mapleader=","

" {
    set incsearch
    set hlsearch
    set ignorecase
    set smartcase

    set scrolloff=5
    set sidescrolloff=15

    set clipboard+=unnamed

    set showmode
    set showcmd
    set relativenumber
    set number

    set history=1000

    set shiftwidth=4
    set tabstop=4

    set nowrap
" }

nnoremap <Space>nh :noh<CR>

nnoremap j jzz
nnoremap k kzz

noremap  <Space>a  ^
noremap  <Space>e  $

nnoremap <Space>m  `m
nnoremap Q         @q

noremap  <Space>p  "0p
noremap  <Space>P  "0P

onoremap ij        i'
onoremap iJ        i"
onoremap aj        a'
onoremap aJ        a"

vnoremap ij        i'
vnoremap iJ        i"
vnoremap aj        a'
vnoremap aJ        a"

" Plugins {
    " https://github.com/JetBrains/ideavim/wiki/Emulated-plugins
    Plug 'chrisbra/matchit'
    Plug 'dbakker/vim-paragraph-motion'
    Plug 'easymotion/vim-easymotion'
    Plug 'kana/vim-textobj-entire'
    Plug 'machakann/vim-highlightedyank'
    Plug 'michaeljsmith/vim-indent-object'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'tommcdo/vim-exchange'
    Plug 'tpope/vim-surround'
    Plug 'vim-scripts/argtextobj.vim'
    set  quickscope
" }

" https://github.com/JetBrains/ideavim/wiki/%22ideajoin%22-examples
set ideajoin

" https://github.com/JetBrains/ideavim/wiki/Select-mode
set idearefactormode=visual

" https://github.com/JetBrains/ideavim/wiki/Emulated-plugins#highlightedyank
let g:highlightedyank_highlight_color = "rgb(123, 171, 187, 127)"

" { Browse
    map <Space>d <Action>(GotoDeclaration)

    map <BS>     <Action>(Back)
    map <C-BS>   <Action>(Forward)

    map gi       <Action>(GotoImplementation)
    map gs       <Action>(GotoSuperMethod)

    map <Space>q <Action>(QuickImplementations)

    noremap gI '.
" }

" { EditorSelectWord
    map <C-W>   <Action>(EditorSelectWord)
    map <C-S-W> <Action>(EditorUnSelectWord)
" }

" { Windows
    map <Tab>m <Action>(HideAllWindows)
    map <Tab>g <Action>(ActivateCommitToolWindow)
    map <Tab>t <Action>(ActivateTerminalToolWindow)
" }

" { Edit
    map  <Space>ca <Action>(StringManipulation.Group.SwitchCase)
    map  <Space>rr <Action>(Refactorings.QuickListPopupAction)
    map  <Space>sw <Action>(SurroundWith)
    imap <D-L>     <Action>(FittenCode.InsertOneWordCompletion)
    map  <D-U>     u
    imap <D-U>     <C-O>u
" }

map <Space>ss  <Action>(SelectInProjectView)
map <Space>his <Action>(LocalHistory.ShowHistory)
map <Space>fs  <Action>(FileStructurePopup)
map <Space>tp  :!tmux new-window -c $PWD -n $(basename $PWD) &<CR>

map <Space>rf  <Action>(ReformatCode)

map <Tab><Tab> <Plug>(easymotion-s)
