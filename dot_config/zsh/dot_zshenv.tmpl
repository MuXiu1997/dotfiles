# { XDG
    export XDG_CONFIG_HOME="$HOME/.config"
    export XDG_CACHE_HOME="$HOME/.cache"
    export XDG_DATA_HOME="$HOME/.local/share"
    export XDG_STATE_HOME="$HOME/.local/state"
    export XDG_RUNTIME_DIR=
    {{- if eq .chezmoi.os "darwin" -}}
      "$TMPDIR"
    {{- else -}}
      "/run/user/$UID"
    {{- end }}
# }

# { Zsh
    export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
# }

# { Homebrew
    local brew="{{- .homebrew_prefix -}}/bin/brew"
    if [[ -f "$brew" ]]; then
        eval "$($brew shellenv)"
        export FPATH="$FPATH:$HOMEBREW_PREFIX/share/zsh/site-functions"
    fi
# }

# { Tmux
    export TMUX_PLUGIN_MANAGER_PATH="$XDG_CONFIG_HOME/tmux/plugins"
# }

# { Zoxide
    export _ZO_DATA_DIR="$XDG_DATA_HOME"
# }

# { Ranger
    export RANGER_LOAD_DEFAULT_RC="FALSE"
# {
#
# { Git
    export GIT_CONFIG_GLOBAL="$XDG_CONFIG_HOME/git/config"
# }

# { Lazygit
    export LG_CONFIG_FILE="$XDG_CONFIG_HOME/lazygit/config.yml"
# }

# { Nvm
    export NVM_DIR="$XDG_DATA_HOME/nvm"
    if ! type nvm &>/dev/null; then
        [ -s "$HOMEBREW_PREFIX/opt/nvm/nvm.sh" ] && . "$HOMEBREW_PREFIX/opt/nvm/nvm.sh"
    fi
    if type nvm &>/dev/null; then
        nvm use default --silent
    fi
# }

# { Npm
    export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
# }

# { Ni
    export NI_CONFIG_FILE="$XDG_CONFIG_HOME/ni/nirc"
# }

# { Deno
    export DENO_DIR="$XDG_CACHE_HOME/deno"
# }

# { Pyenv
    if type pyenv &>/dev/null; then
        eval "$(pyenv init -)"
    fi
# }

# { Goenv
    export GOENV_ROOT="$XDG_DATA_HOME/goenv"
    if type goenv &>/dev/null; then
        eval "$(goenv init -)"
    fi
# }

# { Go
    export GOPATH="$XDG_DATA_HOME/go"
    export GOBIN="$GOPATH/bin"
    export PATH="$GOBIN:$PATH"
    export GOMODCACHE="$GOPATH/pkg/mod"
    export GOPROXY="https://goproxy.cn,direct"
# }

# { Pyenv
    export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
# }

# { Poetry
    export POETRY_CONFIG_DIR="$XDG_CONFIG_HOME/poetry"
    export POETRY_DATA_DIR="$XDG_DATA_HOME/poetry"
    export POETRY_CACHE_DIR="$XDG_CACHE_HOME/poetry"
    export POETRY_VIRTUALENVS_IN_PROJECT=true
# }

# { Jenv
    export JENV_ROOT="$XDG_DATA_HOME/jenv"
    if type jenv &>/dev/null; then
        eval "$(jenv init -)"
    fi
# }

# { Gradle
    export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
# }

[[ ! -f "$ZDOTDIR/.zshenv.local" ]] || source "$ZDOTDIR/.zshenv.local"

typeset -U path fpath PATH FPATH
local custom_bin="$HOME/bin"
path=($custom_bin $path)
fpath=($fpath $XDG_DATA_HOME/zsh/site-functions)

