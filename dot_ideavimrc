let mapleader=","

" {
    set incsearch
    set hlsearch
    set ignorecase
    set smartcase

    set scrolloff=5
    set sidescrolloff=15

    set clipboard+=unnamed

    set showmode
    set showcmd
    set relativenumber
    set number

    set history=1000

    set shiftwidth=4
    set tabstop=4

    set nowrap
" }

nnoremap <Space>nh :noh<CR>

nnoremap j jzz
nnoremap k kzz

noremap  <Space>a  ^
noremap  <Space>e  $

nnoremap <Space>m  `m
nnoremap Q         @q

noremap  <Space>p  "0p
noremap  <Space>P  "0P

onoremap ij        i'
onoremap iJ        i"
onoremap aj        a'
onoremap aJ        a"

vnoremap ij        i'
vnoremap iJ        i"
vnoremap aj        a'
vnoremap aJ        a"

" Plugins {
    " https://github.com/JetBrains/ideavim/wiki/Emulated-plugins
    Plug 'chrisbra/matchit'
    Plug 'dbakker/vim-paragraph-motion'
    Plug 'easymotion/vim-easymotion'
    Plug 'kana/vim-textobj-entire'
    Plug 'machakann/vim-highlightedyank'
    Plug 'michaeljsmith/vim-indent-object'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'tommcdo/vim-exchange'
    Plug 'tpope/vim-surround'
    Plug 'vim-scripts/argtextobj.vim'
" }

" https://github.com/JetBrains/ideavim/wiki/%22ideajoin%22-examples
set ideajoin

" https://github.com/JetBrains/ideavim/wiki/Select-mode
set idearefactormode=visual

" https://github.com/JetBrains/ideavim/wiki/Emulated-plugins#highlightedyank
let g:highlightedyank_highlight_color = "rgb(123, 171, 187, 127)"

" { Browse
    noremap <Space>d :action GotoDeclaration<CR>

    noremap <BS>     :action Back<CR>
    noremap <C-BS>   :action Forward<CR>

    noremap gi       :action GotoImplementation<CR>
    noremap gs       :action GotoSuperMethod<CR>
" }

" { EditorSelectWord
    noremap <C-W>   :action EditorSelectWord<CR>
    noremap <C-S-W> :action EditorUnSelectWord<CR>
" }

" { Windows
    nnoremap <Tab>m :action HideAllWindows<CR>
    nnoremap <Tab>r :action ActivatenpmToolWindow<CR>:action ActivateMavenToolWindow<CR>:action ActivatemakeToolWindow<CR>
    nnoremap <Tab>g :action ActivateCommitToolWindow<CR>
    nnoremap <Tab>t :action ActivateTerminalToolWindow<CR>
" }

" { Edit
    noremap <Space>ca :action StringManipulation.Group.SwitchCase<CR>
    noremap <Space>rr :action Refactorings.QuickListPopupAction<CR>
    noremap <Space>sw :action SurroundWith<CR>
" }

nnoremap <Space>his :action LocalHistory.ShowHistory<CR>
nnoremap <Space>fs  :action FileStructurePopup<CR>

nnoremap <Leader>rf :action ReformatCode<CR>

map      <Tab><Tab> <Plug>(easymotion-s)




