let mapleader=","

set incsearch          " 输入搜索模式时同时高亮部分的匹配
set hlsearch           " 高亮最近的匹配搜索模式
set ignorecase         " 搜索模式时忽略大小写
set smartcase          " 模式中有大写字母时不忽略大小写

set scrolloff=5        " 光标上下的最少行数
set sidescrolloff=15   " 在光标左右最少出现的列数

set clipboard+=unnamed " 使用剪贴板作为无名的寄存器

set showmode           " 在状态行上显示当前模式的消息
set showcmd            " 在状态行里显示 (部分) 命令
set relativenumber     " 每行前显示相对行号
set number             " 行前显示行号

set history=1000       " 记住的命令行的行数

set shiftwidth=4       " (自动) 缩进使用的步进单位，以空白数目计
set tabstop=4          " <Tab> 在文件里使用的空格数

set nowrap             " 禁用长行回绕并在下一行继续

nnoremap <Space>nh :noh<CR>

noremap  <Space>a  ^
noremap  <Space>e  $

nnoremap <Space>m  `m
nnoremap Q         @q

noremap  <Space>p  "0p
noremap  <Space>P  "0P
vnoremap <Space>p  "0p

onoremap ij        i'
onoremap iJ        i"
onoremap aj        a'
onoremap aJ        a"

vnoremap ij        i'
vnoremap iJ        i"
vnoremap aj        a'
vnoremap aJ        a"

" Plugins {
    set easymotion
    set surround
    set ideajoin
    set exchange
    set highlightedyank
    set textobj-indent
    set argtextobj
    set multiple-cursors
    set matchit
" }

" https://github.com/JetBrains/ideavim/wiki/Select-mode
set idearefactormode=visual

" {
    inoremap <BS>    <NOP>
    inoremap <Esc>   <NOP>
    inoremap <Up>    <NOP>
    inoremap <Down>  <NOP>
    inoremap <Left>  <NOP>
    inoremap <Right> <NOP>

    nnoremap <BS>    <NOP>
    nnoremap <Up>    <NOP>
    nnoremap <Down>  <NOP>
    nnoremap <Left>  <NOP>
    nnoremap <Right> <NOP>
" }

" { Browse
    noremap <Space>d :action GotoDeclaration<CR>

    noremap <BS>     :action Back<CR>
    noremap <C-BS>   :action Forward<CR>
" }

" { EditorSelectWord
    noremap <C-W>   :action EditorSelectWord<CR>
    noremap <C-S-W> :action EditorUnSelectWord<CR>
" }

" { Windows
    nnoremap <Tab>m :action HideAllWindows<CR>
    nnoremap <Tab>r :action ActivatenpmToolWindow<CR>:action ActivateMavenToolWindow<CR>:action ActivatemakeToolWindow<CR>
    nnoremap <Tab>g :action ActivateCommitToolWindow<CR>
    nnoremap <Tab>t :action ActivateTerminalToolWindow<CR>
" }


" { Edit
    noremap <Space>ca :action StringManipulation.Group.SwitchCase<CR>
    noremap <Space>rr :action Refactorings.QuickListPopupAction<CR>
    noremap <Space>sw :action SurroundWith<CR>
" }

nnoremap <Space>his :action LocalHistory.ShowHistory<CR>
nnoremap <Space>fs  :action FileStructurePopup<CR>


nnoremap <Leader>rf :action ReformatCode<CR>


map      <Tab><Tab> <Plug>(easymotion-s)

